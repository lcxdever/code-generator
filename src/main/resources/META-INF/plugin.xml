<idea-plugin>
    <id>com.roc.code-generator</id>
    <name>Roc Code</name>
    <vendor email="lcxdever@gmail.com" url="https://github.com/lcxdever/code-generator">Roc</vendor>

    <description>
        <![CDATA[
            It is used to improve coding efficiency.
            <br/>
            Automatically generate code or documents according to the predetermined template.
            </br><br>
            Features：
            </br>
            <ol>
                <li>Generate Mockito or Powermock unit test templates</li>
                <li>Generate Markdown documents according to Java interface methods or Java classes</li>
            </ol>
            Usage:
            <br/>
            <ol>
                <li>Unit Test: open the class and right-click to select "Generate..." -> "Unit Test"</li>
                <li>Markdown Doc: open the interface class, move the cursor to the method that needs to generate the document,
                    <br/>
                    and right-click to select "Generate..." -> "Markdown Doc"
                </li>
            </ol>
            用于提升编码效率，按照预定模板自动生成代码或文档。
            <br/><br>
            特性:
            <br/>
            <ol>
                <li>实现了 Mockito、Powermock 单元测试模板生成</li>
                <li>实现了根据接口方法、类，生成 Markdown 文档</li>
            </ol>
            用法:
            <br/>
            <ol>
                <li>单元测试：打开待测试的类，右键选择"Generate..." -> "Unit Test"</li>
                <li>Markdown文档：打开接口类，将光标移动到需要生成文档的方法，右键选择"Generate..." -> "Markdown Doc"</li>
            </ol>
            动图展示（GIF）：
            <br/>
            生成单元测试模板（generate unit test）：
            <br/>
            <img src="https://plugins.jetbrains.com/files/18692/screenshot_0634cc29-17ca-4b14-96b5-90a76702d674"/>
            <br/>
            生成接口方法 markdown 文档（generate method markdown）：
            <br/>
            <img src="https://plugins.jetbrains.com/files/18692/screenshot_46e47bfe-8cfb-4976-9100-9bbbed5fcd8f"/>
            <br/>
            生成类 markdown 文档（generate class markdown）：
            <br/>
            <img src="https://plugins.jetbrains.com/files/18692/screenshot_8a8ca88a-85fb-4264-8e9a-a3be31b8377e"/>
            <br/>
        ]]>
    </description>

    <!-- please see https://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>

    <extensionPoints>
        <extensionPoint name="testFramework" interface="com.roc.generator.unittest.TestFramework" />
        <extensionPoint name="mdAnnotationFormatter" interface="com.roc.generator.javadoc.MdAnnotationFormatter" />
    </extensionPoints>

    <extensions defaultExtensionNs="com.roc.code-generator">
        <testFramework implementation="com.roc.generator.unittest.impl.Mockito"/>
        <testFramework implementation="com.roc.generator.unittest.impl.PowerMock"/>

        <mdAnnotationFormatter implementation="com.roc.generator.javadoc.impl.AnnoLengthRange"/>
        <mdAnnotationFormatter implementation="com.roc.generator.javadoc.impl.AnnoMin"/>
        <mdAnnotationFormatter implementation="com.roc.generator.javadoc.impl.AnnoMax"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <notificationGroup id="md_doc_generator_notification" displayType="BALLOON"/>
    </extensions>

    <actions>
        <action id="roc_generate_unit_test" class="com.roc.generator.unittest.CreateTestAction" text="Unit Test"
                description="Generate unit test">
            <add-to-group group-id="GenerateGroup" anchor="first" />
        </action>
        <action id="roc_generate_filed_const" class="com.roc.generator.fieldconst.GenerateFieldConstAction"
                text="Field Constants">
            <add-to-group group-id="GenerateGroup" anchor="after" relative-to-action="roc_generate_unit_test"/>
        </action>
        <action id="roc_generate_md_doc" class="com.roc.generator.javadoc.MdDocGenerateAction"
                text="Markdown Doc">
            <add-to-group group-id="GenerateGroup" anchor="after" relative-to-action="roc_generate_filed_const"/>
        </action>
    </actions>
</idea-plugin>